// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nPAJjRdgZFrbGDnyeYXFFi
// Component: QVjH6T8fCTDq1E
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: hjbFT3xdBQpvM/component
import Section from "../../Section"; // plasmic-import: zZwgbNNQqGnYp/component
import Plan from "../../Plan"; // plasmic-import: Q3o3E1j8gkZJNx/component
import Bullet from "../../Bullet"; // plasmic-import: DcZq28r0qwRqst/component
import LinkButton from "../../LinkButton"; // plasmic-import: vuMfqgxfPAOyJ/component
import Faq from "../../Faq"; // plasmic-import: eR7O-tD-c4_bmG/component
import Footer from "../../Footer"; // plasmic-import: Gsal314BZ_09N/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: a3UJwGt1T7p74M/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css"; // plasmic-import: nPAJjRdgZFrbGDnyeYXFFi/projectcss
import * as sty from "./PlasmicPricing.module.css"; // plasmic-import: QVjH6T8fCTDq1E/css

export const PlasmicPricing__VariantProps = new Array();

export const PlasmicPricing__ArgProps = new Array();

function PlasmicPricing__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__hPwir)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <Section
              className={classNames("__wab_instance", sty.section__yPwi)}
              subtitle={
                <React.Fragment>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__xt1K
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__lLtZi)}
                  >
                    <Plan
                      className={classNames("__wab_instance", sty.plan__uvJ6S)}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__fWiVs
                          )}
                        >
                          {"$10"}
                        </div>
                      }
                    >
                      <LinkButton text={"Get started"} type={"outlineBlue"} />
                    </Plan>

                    <Plan
                      className={classNames("__wab_instance", sty.plan__z27KK)}
                      description={
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__dCVjL)}
                        >
                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet__uSpX
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet___3LAlv
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet__eb2CC
                            )}
                          />

                          <Bullet
                            className={classNames(
                              "__wab_instance",
                              sty.bullet___1Fadm
                            )}
                          />
                        </p.Stack>
                      }
                      name={"Team"}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__fzihY
                          )}
                        >
                          {"$49"}
                        </div>
                      }
                    >
                      <LinkButton text={"Get started"} type={"solidBlue"} />
                    </Plan>

                    <Plan
                      className={classNames("__wab_instance", sty.plan__omWwE)}
                      name={"Enterprise"}
                      price={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__i9Hxf
                          )}
                        >
                          {"$199"}
                        </div>
                      }
                    >
                      <LinkButton text={"Contact us"} type={"outlineBlue"} />
                    </Plan>
                  </p.Stack>
                </React.Fragment>
              }
              title={"Pricing"}
            />

            <Section
              className={classNames("__wab_instance", sty.section__jyLzT)}
              subtitle={
                <React.Fragment>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__gIrPi
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  </div>

                  <Faq
                    className={classNames("__wab_instance", sty.faq___12100)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Are there long-term contracts?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq__acear)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Can I add or remove licenses?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq___7RuXu)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Do you offer refunds?"}
                  </Faq>
                </React.Fragment>
              }
              title={"FAQ"}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "footer"],
  header: ["header"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricing__ArgProps,
      internalVariantPropNames: PlasmicPricing__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
